generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Session       Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Activity {
  id          Int      @id @default(autoincrement())
  clientId    String   @unique
  lastCheckin DateTime @default(now())
  Client      Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model Client {
  id        String      @id
  clientKey String
  Activity  Activity?
  DataPoint DataPoint[]
}

model DataPoint {
  id        Int      @id @default(autoincrement())
  clientId  String
  dataPoint String
  createdAt DateTime @default(now())
  Client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}
