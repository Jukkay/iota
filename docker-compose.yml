version: '3.9'
services:

  client:
    container_name: 'iota_client'
    image: node
    volumes:
      - './client:/client'
    working_dir: '/client'
    entrypoint: '/bin/bash -c'
    command:
      - "node --watch client.ts"
    ports:
      - 3000:3000
    environment:
      TZ: 'Europe/Helsinki'
      API_URL: http://localhost:4000

  db:
    container_name: 'iota_db'
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: iota
      POSTGRES_DB: iota
      POSTGRES_PASSWORD: RandomPassword
      TZ: 'Europe/Helsinki'
      PGTZ: 'Europe/Helsinki'
      DOCKER_BUILDKIT: 1 docker build .

  server:
    container_name: 'iota_server'
    image: node
    depends_on:
      - db
    volumes:
      - ./server:/server
    working_dir: "/server"
    environment:
        SERVER_TOKEN: RandomServerTokenSecret
        REFRESH_TOKEN: RandomRefreshTokenSecret
        POSTGRES_USER: iota
        POSTGRES_DB: iota
        POSTGRES_PASSWORD: RandomPassword
        PORT: 4000
        CLIENT_URL: http://localhost:3000
        DASHBOARD_URL: http://localhost:5000
    entrypoint: "/bin/bash -c"
    command:
      - "node --watch server.ts"
    ports:
      - 4000:4000
  
  dashboard:
    container_name: 'iota_dashboard'
    image: node
    depends_on:
      - db
    volumes:
      - ./dashboard:/dashboard
    working_dir: "/dashboard"
    environment:
        PORT: 5000
        CLIENT_URL: http://localhost:3000
        API_URL: http://localhost:4000
    entrypoint: "/bin/bash -c"
    command:
      - "yarn start"
    ports:
      - 5000:5000

volumes:
  db-data:
    name: iota-data

